// Code generated by protoc-gen-go. DO NOT EDIT.
// source: transactionProto.proto

/*
Package transactionProto is a generated protocol buffer package.

It is generated from these files:
	transactionProto.proto

It has these top-level messages:
	Transaction
	Content
	SignedTransaction
*/
package transactionProto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Crypto int32

const (
	Crypto_SECP Crypto = 0
	Crypto_SM2  Crypto = 1
)

var Crypto_name = map[int32]string{
	0: "SECP",
	1: "SM2",
}
var Crypto_value = map[string]int32{
	"SECP": 0,
	"SM2":  1,
}

func (x Crypto) String() string {
	return proto.EnumName(Crypto_name, int32(x))
}
func (Crypto) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type Transaction struct {
	From    string `protobuf:"bytes,1,opt,name=from" json:"from,omitempty"`
	To      string `protobuf:"bytes,2,opt,name=to" json:"to,omitempty"`
	Content []byte `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
}

func (m *Transaction) Reset()                    { *m = Transaction{} }
func (m *Transaction) String() string            { return proto.CompactTextString(m) }
func (*Transaction) ProtoMessage()               {}
func (*Transaction) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Transaction) GetFrom() string {
	if m != nil {
		return m.From
	}
	return ""
}

func (m *Transaction) GetTo() string {
	if m != nil {
		return m.To
	}
	return ""
}

func (m *Transaction) GetContent() []byte {
	if m != nil {
		return m.Content
	}
	return nil
}

type Content struct {
	Nonce string `protobuf:"bytes,1,opt,name=nonce" json:"nonce,omitempty"`
	Gas   uint64 `protobuf:"varint,2,opt,name=gas" json:"gas,omitempty"`
	Value uint64 `protobuf:"varint,3,opt,name=value" json:"value,omitempty"`
	Data  []byte `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
}

func (m *Content) Reset()                    { *m = Content{} }
func (m *Content) String() string            { return proto.CompactTextString(m) }
func (*Content) ProtoMessage()               {}
func (*Content) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Content) GetNonce() string {
	if m != nil {
		return m.Nonce
	}
	return ""
}

func (m *Content) GetGas() uint64 {
	if m != nil {
		return m.Gas
	}
	return 0
}

func (m *Content) GetValue() uint64 {
	if m != nil {
		return m.Value
	}
	return 0
}

func (m *Content) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type SignedTransaction struct {
	Transaction []byte `protobuf:"bytes,1,opt,name=transaction,proto3" json:"transaction,omitempty"`
	Signature   []byte `protobuf:"bytes,2,opt,name=signature,proto3" json:"signature,omitempty"`
	Crypto      Crypto `protobuf:"varint,3,opt,name=crypto,enum=Crypto" json:"crypto,omitempty"`
}

func (m *SignedTransaction) Reset()                    { *m = SignedTransaction{} }
func (m *SignedTransaction) String() string            { return proto.CompactTextString(m) }
func (*SignedTransaction) ProtoMessage()               {}
func (*SignedTransaction) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *SignedTransaction) GetTransaction() []byte {
	if m != nil {
		return m.Transaction
	}
	return nil
}

func (m *SignedTransaction) GetSignature() []byte {
	if m != nil {
		return m.Signature
	}
	return nil
}

func (m *SignedTransaction) GetCrypto() Crypto {
	if m != nil {
		return m.Crypto
	}
	return Crypto_SECP
}

func init() {
	proto.RegisterType((*Transaction)(nil), "Transaction")
	proto.RegisterType((*Content)(nil), "Content")
	proto.RegisterType((*SignedTransaction)(nil), "SignedTransaction")
	proto.RegisterEnum("Crypto", Crypto_name, Crypto_value)
}

func init() { proto.RegisterFile("transactionProto.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 243 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x4c, 0x90, 0x41, 0x4b, 0xc3, 0x40,
	0x10, 0x85, 0x4d, 0xb2, 0x26, 0x76, 0x1a, 0x4a, 0x1c, 0x44, 0x16, 0x14, 0x0c, 0x39, 0x15, 0x0f,
	0x3d, 0xd4, 0x9f, 0x10, 0x3c, 0x89, 0x50, 0x36, 0xde, 0x3c, 0xad, 0xe9, 0x1a, 0x02, 0xba, 0x53,
	0x36, 0x53, 0xc1, 0x7f, 0x2f, 0x99, 0x54, 0x9a, 0xcb, 0xf2, 0xde, 0xb7, 0xcb, 0x7b, 0xb3, 0x03,
	0xb7, 0x1c, 0xac, 0x1f, 0x6c, 0xcb, 0x3d, 0xf9, 0x5d, 0x20, 0xa6, 0xcd, 0x61, 0x3c, 0xab, 0x17,
	0x58, 0xbe, 0x9d, 0x6f, 0x10, 0x41, 0x7d, 0x06, 0xfa, 0xd6, 0x51, 0x19, 0xad, 0x17, 0x46, 0x34,
	0xae, 0x20, 0x66, 0xd2, 0xb1, 0x90, 0x98, 0x09, 0x35, 0x64, 0x2d, 0x79, 0x76, 0x9e, 0x75, 0x52,
	0x46, 0xeb, 0xdc, 0xfc, 0xdb, 0xea, 0x1d, 0xb2, 0x7a, 0x92, 0x78, 0x03, 0x97, 0x9e, 0x7c, 0xeb,
	0x4e, 0x49, 0x93, 0xc1, 0x02, 0x92, 0xce, 0x0e, 0x92, 0xa5, 0xcc, 0x28, 0xc7, 0x77, 0x3f, 0xf6,
	0xeb, 0xe8, 0x24, 0x4a, 0x99, 0xc9, 0x8c, 0x63, 0xec, 0x2d, 0x5b, 0xad, 0x24, 0x5f, 0x74, 0xc5,
	0x70, 0xdd, 0xf4, 0x9d, 0x77, 0xfb, 0xf9, 0xbc, 0x25, 0x2c, 0x67, 0x1f, 0x93, 0xb2, 0xdc, 0xcc,
	0x11, 0xde, 0xc3, 0x62, 0xe8, 0x3b, 0x6f, 0xf9, 0x18, 0x9c, 0x14, 0xe7, 0xe6, 0x0c, 0xf0, 0x01,
	0xd2, 0x36, 0xfc, 0x1e, 0x98, 0xa4, 0x7f, 0xb5, 0xcd, 0x36, 0xb5, 0x58, 0x73, 0xc2, 0x8f, 0x77,
	0x90, 0x4e, 0x04, 0xaf, 0x40, 0x35, 0xcf, 0xf5, 0xae, 0xb8, 0xc0, 0x0c, 0x92, 0xe6, 0x75, 0x5b,
	0x44, 0x1f, 0xa9, 0xec, 0xf0, 0xe9, 0x2f, 0x00, 0x00, 0xff, 0xff, 0x8d, 0x3b, 0xa2, 0x5f, 0x5d,
	0x01, 0x00, 0x00,
}
